// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
)

type Yum struct {
	ModuleName string
	Params     YumParams
	Result     YumResult
}

type YumParams struct {

	// AllowDowngrade
	AllowDowngrade bool `yaml:"allow_downgrade,omitempty" json:"allow_downgrade,omitempty"`

	// Autoremove
	Autoremove bool `yaml:"autoremove,omitempty" json:"autoremove,omitempty"`

	// Bugfix
	Bugfix bool `yaml:"bugfix,omitempty" json:"bugfix,omitempty"`

	// Cacheonly
	Cacheonly bool `yaml:"cacheonly,omitempty" json:"cacheonly,omitempty"`

	// ConfFile
	ConfFile string `yaml:"conf_file,omitempty" json:"conf_file,omitempty"`

	// DisableExcludes
	DisableExcludes string `yaml:"disable_excludes,omitempty" json:"disable_excludes,omitempty"`

	// DisableGpgCheck
	DisableGpgCheck bool `yaml:"disable_gpg_check,omitempty" json:"disable_gpg_check,omitempty"`

	// DisablePlugin
	DisablePlugin []string `yaml:"disable_plugin,omitempty" json:"disable_plugin,omitempty"`

	// Disablerepo
	Disablerepo []string `yaml:"disablerepo,omitempty" json:"disablerepo,omitempty"`

	// DownloadDir
	DownloadDir string `yaml:"download_dir,omitempty" json:"download_dir,omitempty"`

	// DownloadOnly
	DownloadOnly bool `yaml:"download_only,omitempty" json:"download_only,omitempty"`

	// EnablePlugin
	EnablePlugin []string `yaml:"enable_plugin,omitempty" json:"enable_plugin,omitempty"`

	// Enablerepo
	Enablerepo []string `yaml:"enablerepo,omitempty" json:"enablerepo,omitempty"`

	// Exclude
	Exclude []string `yaml:"exclude,omitempty" json:"exclude,omitempty"`

	// InstallRepoquery
	InstallRepoquery bool `yaml:"install_repoquery,omitempty" json:"install_repoquery,omitempty"`

	// InstallWeakDeps
	InstallWeakDeps bool `yaml:"install_weak_deps,omitempty" json:"install_weak_deps,omitempty"`

	// Installroot
	Installroot string `yaml:"installroot,omitempty" json:"installroot,omitempty"`

	// List
	List string `yaml:"list,omitempty" json:"list,omitempty"`

	// LockTimeout
	LockTimeout int `yaml:"lock_timeout,omitempty" json:"lock_timeout,omitempty"`

	// Name
	Name []string `yaml:"name,omitempty" json:"name,omitempty"`

	// Releasever
	Releasever string `yaml:"releasever,omitempty" json:"releasever,omitempty"`

	// Security
	Security bool `yaml:"security,omitempty" json:"security,omitempty"`

	// SkipBroken
	SkipBroken bool `yaml:"skip_broken,omitempty" json:"skip_broken,omitempty"`

	// Sslverify
	Sslverify bool `yaml:"sslverify,omitempty" json:"sslverify,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// UpdateCache
	UpdateCache bool `yaml:"update_cache,omitempty" json:"update_cache,omitempty"`

	// UpdateOnly
	UpdateOnly bool `yaml:"update_only,omitempty" json:"update_only,omitempty"`

	// UseBackend
	UseBackend string `yaml:"use_backend,omitempty" json:"use_backend,omitempty"`

	// ValidateCerts
	ValidateCerts bool `yaml:"validate_certs,omitempty" json:"validate_certs,omitempty"`
}

type YumResult struct {
	Raw string
}

func (m *Yum) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func NewYum() *Yum {
	return &Yum{
		ModuleName: "yum",
	}
}
