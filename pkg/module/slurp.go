package module

// Autogenerated file

import (
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("slurp", func() Module {
		return NewSlurp()
	})
}

//
// Slurp (slurp) - Slurps a file from remote nodes
//
func NewSlurp() *Slurp {
	return &Slurp{}
}

// Slurp (slurp) - Slurps a file from remote nodes
//
// This module works like M(ansible.builtin.fetch). It is used for fetching a base64- encoded blob containing the data in a remote file.
// This module is also supported for Windows targets.
//
// Source: https://github.com/ansible/ansible/blob/v2.13.1/lib/ansible/modules/slurp.py
type Slurp struct {
	Params SlurpParams
	Result SlurpResult
}

type SlurpParams struct {

	// Src
	// The file on the remote system to fetch. This I(must) be a file, not a directory.
	//
	// Default: <no value>
	// Required: true
	Src string `yaml:"src,omitempty" json:"src,omitempty"`
}

type SlurpResult struct {
	types.CommonReturn
	Raw string

	// Content
	// Encoded file content
	Content string `yaml:"content,omitempty" json:"content,omitempty"`

	// Encoding
	// Type of encoding used for file
	Encoding string `yaml:"encoding,omitempty" json:"encoding,omitempty"`

	// Source
	// Actual path of file slurped
	Source string `yaml:"source,omitempty" json:"source,omitempty"`
}

func (m *Slurp) GetResult() interface{} {
	return &m.Result
}

func (m *Slurp) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Slurp) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *Slurp) GetParams() interface{} {
	return &m.Params
}

func (m *Slurp) GetType() string {
	return "slurp"
}
