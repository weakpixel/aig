// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
)

func init() {
	addModuleFactory("service", func() Module {
		return NewService()
	})
}

type Service struct {
	ModuleName string
	Params     ServiceParams
	Result     ServiceResult
}

type ServiceParams struct {

	// Arguments
	Arguments string `yaml:"arguments,omitempty" json:"arguments,omitempty"`

	// Enabled
	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`

	// Name
	Name string `yaml:"name,omitempty" json:"name,omitempty"`

	// Pattern
	Pattern string `yaml:"pattern,omitempty" json:"pattern,omitempty"`

	// Runlevel
	Runlevel string `yaml:"runlevel,omitempty" json:"runlevel,omitempty"`

	// Sleep
	Sleep int `yaml:"sleep,omitempty" json:"sleep,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// Use
	Use string `yaml:"use,omitempty" json:"use,omitempty"`
}

type ServiceResult struct {
	Raw string
}

func (m *Service) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *Service) GetResult() interface{} {
	return &m.Result
}

func (m *Service) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Service) GetParams() interface{} {
	return &m.Params
}

func (m *Service) GetType() string {
	return m.ModuleName
}

func NewService() *Service {
	return &Service{
		ModuleName: "service",
	}
}
