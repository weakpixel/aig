// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("setup", func() Module {
		return NewSetup()
	})
}

type Setup struct {
	ModuleName string
	Params     SetupParams
	Result     SetupResult
}

type SetupParams struct {

	// FactPath
	FactPath string `yaml:"fact_path,omitempty" json:"fact_path,omitempty"`

	// Filter
	Filter []string `yaml:"filter,omitempty" json:"filter,omitempty"`

	// GatherSubset
	GatherSubset []string `yaml:"gather_subset,omitempty" json:"gather_subset,omitempty"`

	// GatherTimeout
	GatherTimeout int `yaml:"gather_timeout,omitempty" json:"gather_timeout,omitempty"`
}

type SetupResult struct {
	types.CommonReturn
	Raw string
}

func (m *Setup) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *Setup) GetResult() interface{} {
	return &m.Result
}

func (m *Setup) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Setup) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *Setup) GetParams() interface{} {
	return &m.Params
}

func (m *Setup) GetType() string {
	return m.ModuleName
}

func NewSetup() *Setup {
	return &Setup{
		ModuleName: "setup",
	}
}
