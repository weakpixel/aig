// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("cron", func() Module {
		return NewCron()
	})
}

type Cron struct {
	ModuleName string
	Params     CronParams
	Result     CronResult
}

type CronParams struct {

	// Backup
	Backup bool `yaml:"backup,omitempty" json:"backup,omitempty"`

	// CronFile
	CronFile string `yaml:"cron_file,omitempty" json:"cron_file,omitempty"`

	// Day
	Day string `yaml:"day,omitempty" json:"day,omitempty"`

	// Disabled
	Disabled bool `yaml:"disabled,omitempty" json:"disabled,omitempty"`

	// Env
	Env bool `yaml:"env,omitempty" json:"env,omitempty"`

	// Hour
	Hour string `yaml:"hour,omitempty" json:"hour,omitempty"`

	// Insertafter
	Insertafter string `yaml:"insertafter,omitempty" json:"insertafter,omitempty"`

	// Insertbefore
	Insertbefore string `yaml:"insertbefore,omitempty" json:"insertbefore,omitempty"`

	// Job
	Job string `yaml:"job,omitempty" json:"job,omitempty"`

	// Minute
	Minute string `yaml:"minute,omitempty" json:"minute,omitempty"`

	// Month
	Month string `yaml:"month,omitempty" json:"month,omitempty"`

	// Name
	Name string `yaml:"name,omitempty" json:"name,omitempty"`

	// SpecialTime
	SpecialTime string `yaml:"special_time,omitempty" json:"special_time,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// User
	User string `yaml:"user,omitempty" json:"user,omitempty"`

	// Weekday
	Weekday string `yaml:"weekday,omitempty" json:"weekday,omitempty"`
}

type CronResult struct {
	types.CommonReturn
	Raw string
}

func (m *Cron) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *Cron) GetResult() interface{} {
	return &m.Result
}

func (m *Cron) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Cron) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *Cron) GetParams() interface{} {
	return &m.Params
}

func (m *Cron) GetType() string {
	return m.ModuleName
}

func NewCron() *Cron {
	return &Cron{
		ModuleName: "cron",
	}
}
