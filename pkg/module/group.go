// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("group", func() Module {
		return NewGroup()
	})
}

type Group struct {
	ModuleName string
	Params     GroupParams
	Result     GroupResult
}

type GroupParams struct {

	// Gid
	Gid int `yaml:"gid,omitempty" json:"gid,omitempty"`

	// Local
	Local bool `yaml:"local,omitempty" json:"local,omitempty"`

	// Name
	Name string `yaml:"name,omitempty" json:"name,omitempty"`

	// NonUnique
	NonUnique bool `yaml:"non_unique,omitempty" json:"non_unique,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// System
	System bool `yaml:"system,omitempty" json:"system,omitempty"`
}

type GroupResult struct {
	types.CommonReturn
	Raw string

	// Gid
	Gid int `yaml:"gid,omitempty" json:"gid,omitempty"`

	// Name
	Name string `yaml:"name,omitempty" json:"name,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// System
	System bool `yaml:"system,omitempty" json:"system,omitempty"`
}

func (m *Group) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *Group) GetResult() interface{} {
	return &m.Result
}

func (m *Group) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Group) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *Group) GetParams() interface{} {
	return &m.Params
}

func (m *Group) GetType() string {
	return m.ModuleName
}

func NewGroup() *Group {
	return &Group{
		ModuleName: "group",
	}
}
