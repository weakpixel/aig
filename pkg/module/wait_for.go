// Autogenerated
package module

import (
	"aig/pkg/ansible"
)

type WaitFor struct {
	ModuleName string
	Params     WaitForParams
	Result     WaitForResult
}

type WaitForParams struct {

	// ActiveConnectionStates
	ActiveConnectionStates []string `yaml:"active_connection_states,omitempty" json:"active_connection_states,omitempty"`

	// ConnectTimeout
	ConnectTimeout int `yaml:"connect_timeout,omitempty" json:"connect_timeout,omitempty"`

	// Delay
	Delay int `yaml:"delay,omitempty" json:"delay,omitempty"`

	// ExcludeHosts
	ExcludeHosts []string `yaml:"exclude_hosts,omitempty" json:"exclude_hosts,omitempty"`

	// Host
	Host string `yaml:"host,omitempty" json:"host,omitempty"`

	// Msg
	Msg string `yaml:"msg,omitempty" json:"msg,omitempty"`

	// Path
	Path string `yaml:"path,omitempty" json:"path,omitempty"`

	// Port
	Port int `yaml:"port,omitempty" json:"port,omitempty"`

	// SearchRegex
	SearchRegex string `yaml:"search_regex,omitempty" json:"search_regex,omitempty"`

	// Sleep
	Sleep int `yaml:"sleep,omitempty" json:"sleep,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// Timeout
	Timeout int `yaml:"timeout,omitempty" json:"timeout,omitempty"`
}

type WaitForResult struct {
	Raw string

	// Elapsed
	Elapsed int `yaml:"elapsed,omitempty" json:"elapsed,omitempty"`

	// MatchGroupdict
	MatchGroupdict map[string]interface{} `yaml:"match_groupdict,omitempty" json:"match_groupdict,omitempty"`

	// MatchGroups
	MatchGroups []map[string]interface{} `yaml:"match_groups,omitempty" json:"match_groups,omitempty"`
}

func (m *WaitFor) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func NewWaitFor() *WaitFor {
	return &WaitFor{
		ModuleName: "wait_for",
	}
}
