// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("template", func() Module {
		return NewTemplate()
	})
}

type Template struct {
	ModuleName string
	Params     TemplateParams
	Result     TemplateResult
}

type TemplateParams struct {

	// Follow
	Follow bool `yaml:"follow,omitempty" json:"follow,omitempty"`
}

type TemplateResult struct {
	types.CommonReturn
	Raw string
}

func (m *Template) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *Template) GetResult() interface{} {
	return &m.Result
}

func (m *Template) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Template) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *Template) GetParams() interface{} {
	return &m.Params
}

func (m *Template) GetType() string {
	return m.ModuleName
}

func NewTemplate() *Template {
	return &Template{
		ModuleName: "template",
	}
}
