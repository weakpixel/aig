// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("sysvinit", func() Module {
		return NewSysvinit()
	})
}

type Sysvinit struct {
	ModuleName string
	Params     SysvinitParams
	Result     SysvinitResult
}

type SysvinitParams struct {

	// Arguments
	Arguments string `yaml:"arguments,omitempty" json:"arguments,omitempty"`

	// Daemonize
	Daemonize bool `yaml:"daemonize,omitempty" json:"daemonize,omitempty"`

	// Enabled
	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`

	// Name
	Name string `yaml:"name,omitempty" json:"name,omitempty"`

	// Pattern
	Pattern string `yaml:"pattern,omitempty" json:"pattern,omitempty"`

	// Runlevels
	Runlevels []string `yaml:"runlevels,omitempty" json:"runlevels,omitempty"`

	// Sleep
	Sleep int `yaml:"sleep,omitempty" json:"sleep,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`
}

type SysvinitResult struct {
	types.CommonReturn
	Raw string

	// Results
	Results interface{} `yaml:"results,omitempty" json:"results,omitempty"`
}

func (m *Sysvinit) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *Sysvinit) GetResult() interface{} {
	return &m.Result
}

func (m *Sysvinit) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Sysvinit) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *Sysvinit) GetParams() interface{} {
	return &m.Params
}

func (m *Sysvinit) GetType() string {
	return m.ModuleName
}

func NewSysvinit() *Sysvinit {
	return &Sysvinit{
		ModuleName: "sysvinit",
	}
}
