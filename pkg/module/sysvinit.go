
// Autogenerated
package module

import (
	"aig/pkg/ansible"
	
)

type Sysvinit struct {
	ModuleName string
	Options SysvinitOptions
	Result SysvinitResult
}

type SysvinitOptions struct {
	
		// Arguments 
		Arguments string `yaml:"arguments,omitempty" json:"arguments,omitempty"`
	
		// Daemonize 
		Daemonize bool `yaml:"daemonize,omitempty" json:"daemonize,omitempty"`
	
		// Enabled 
		Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
	
		// Name 
		Name string `yaml:"name,omitempty" json:"name,omitempty"`
	
		// Pattern 
		Pattern string `yaml:"pattern,omitempty" json:"pattern,omitempty"`
	
		// Runlevels 
		Runlevels []string `yaml:"runlevels,omitempty" json:"runlevels,omitempty"`
	
		// Sleep 
		Sleep int `yaml:"sleep,omitempty" json:"sleep,omitempty"`
	
		// State 
		State string `yaml:"state,omitempty" json:"state,omitempty"`
	
}

type SysvinitResult struct {
	Raw string 
	
		// Results 
		Results interface{} `yaml:"results,omitempty" json:"results,omitempty"`
	
}

func (m *Sysvinit) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Options, &m.Result)
	m.Result.Raw = raw
	return err
}

func NewSysvinit() *Sysvinit {
	return &Sysvinit {
		ModuleName: "sysvinit",
	}
}
	