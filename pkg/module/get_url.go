package module

// Autogenerated file

import (
	"fmt"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("get_url", func() types.Module {
		return NewGetUrl()
	})
}

//
// GetUrl (get_url) - Downloads files from HTTP, HTTPS, or FTP to node
//
func NewGetUrl() *GetUrl {
	module := GetUrl{}
	// Create dynamic param values
	paramValues := map[string]types.Value{}
	paramValues["backup"] = types.NewBoolValue(&module.Params.Backup)
	paramValues["checksum"] = types.NewStringValue(&module.Params.Checksum)
	paramValues["client_cert"] = types.NewStringValue(&module.Params.ClientCert)
	paramValues["client_key"] = types.NewStringValue(&module.Params.ClientKey)
	paramValues["dest"] = types.NewStringValue(&module.Params.Dest)
	paramValues["force"] = types.NewBoolValue(&module.Params.Force)
	paramValues["force_basic_auth"] = types.NewBoolValue(&module.Params.ForceBasicAuth)
	paramValues["headers"] = types.NewStringMapValue(&module.Params.Headers)
	paramValues["http_agent"] = types.NewStringValue(&module.Params.HttpAgent)
	paramValues["sha256sum"] = types.NewStringValue(&module.Params.Sha256sum)
	paramValues["timeout"] = types.NewIntValue(&module.Params.Timeout)
	paramValues["tmp_dest"] = types.NewStringValue(&module.Params.TmpDest)
	paramValues["unredirected_headers"] = types.NewStringListValue(&module.Params.UnredirectedHeaders)
	paramValues["url"] = types.NewStringValue(&module.Params.Url)
	paramValues["url_password"] = types.NewStringValue(&module.Params.UrlPassword)
	paramValues["url_username"] = types.NewStringValue(&module.Params.UrlUsername)
	paramValues["use_gssapi"] = types.NewBoolValue(&module.Params.UseGssapi)
	paramValues["use_proxy"] = types.NewBoolValue(&module.Params.UseProxy)
	paramValues["validate_certs"] = types.NewBoolValue(&module.Params.ValidateCerts)
	module.Params.values = paramValues

	// Create dynamic result values
	resultValues := map[string]types.Value{}

	resultValues["backup_file"] = types.NewStringValue(&module.Result.BackupFile)
	resultValues["checksum_dest"] = types.NewStringValue(&module.Result.ChecksumDest)
	resultValues["checksum_src"] = types.NewStringValue(&module.Result.ChecksumSrc)
	resultValues["dest"] = types.NewStringValue(&module.Result.Dest)
	resultValues["elapsed"] = types.NewIntValue(&module.Result.Elapsed)
	resultValues["gid"] = types.NewIntValue(&module.Result.Gid)
	resultValues["group"] = types.NewStringValue(&module.Result.Group)
	resultValues["md5sum"] = types.NewStringValue(&module.Result.Md5sum)
	resultValues["mode"] = types.NewStringValue(&module.Result.Mode)
	resultValues["msg"] = types.NewStringValue(&module.Result.Msg)
	resultValues["owner"] = types.NewStringValue(&module.Result.Owner)
	resultValues["secontext"] = types.NewStringValue(&module.Result.Secontext)
	resultValues["size"] = types.NewIntValue(&module.Result.Size)
	resultValues["src"] = types.NewStringValue(&module.Result.Src)
	resultValues["state"] = types.NewStringValue(&module.Result.State)
	resultValues["status_code"] = types.NewIntValue(&module.Result.StatusCode)
	resultValues["uid"] = types.NewIntValue(&module.Result.Uid)
	resultValues["url"] = types.NewStringValue(&module.Result.Url)
	module.Result.values = resultValues

	return &module
}

// GetUrl (get_url) - Downloads files from HTTP, HTTPS, or FTP to node
//
// Downloads files from HTTP, HTTPS, or FTP to the remote server. The remote server I(must) have direct access to the remote resource.
//
// By default, if an environment variable C(<protocol>_proxy) is set on the target host, requests will be sent through that proxy. This behaviour can be overridden by setting a variable for this task (see R(setting the environment,playbooks_environment)), or by using the use_proxy option.
//
// HTTP redirects can redirect from HTTP to HTTPS so you should be sure that your proxy environment for both protocols is correct.
//
// From Ansible 2.4 when run with C(--check), it will do a HEAD request to validate the URL but will not download the entire file or verify it against hashes and will report incorrect changed status.
//
// For Windows targets, use the M(ansible.windows.win_get_url) module instead.
//
//
// Source: https://github.com/ansible/ansible/blob/v2.13.1/lib/ansible/modules/get_url.py
type GetUrl struct {
	Params GetUrlParams
	Result GetUrlResult
}

type GetUrlParams struct {

	// Backup
	// Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly.
	//
	// Default: no
	// Required: false
	Backup bool `yaml:"backup,omitempty" json:"backup,omitempty" cty:"backup"`

	// Checksum
	// If a checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully. Format: <algorithm>:<checksum|url>, e.g. checksum="sha256:D98291AC[...]B6DC7B97", checksum="sha256:http://example.com/path/sha256sum.txt"
	// If you worry about portability, only the sha1 algorithm is available on all platforms and python versions.
	// The third party hashlib library can be installed for access to additional algorithms.
	// Additionally, if a checksum is passed to this parameter, and the file exist under the C(dest) location, the I(destination_checksum) would be calculated, and if checksum equals I(destination_checksum), the file download would be skipped (unless C(force) is true). If the checksum does not equal I(destination_checksum), the destination file is deleted.
	//
	// Default:
	// Required: false
	Checksum string `yaml:"checksum,omitempty" json:"checksum,omitempty" cty:"checksum"`

	// ClientCert
	// PEM formatted certificate chain file to be used for SSL client authentication.
	// This file can also include the key as well, and if the key is included, C(client_key) is not required.
	//
	// Default: <no value>
	// Required: false
	ClientCert string `yaml:"client_cert,omitempty" json:"client_cert,omitempty" cty:"client_cert"`

	// ClientKey
	// PEM formatted file that contains your private key to be used for SSL client authentication.
	// If C(client_cert) contains both the certificate and key, this option is not required.
	//
	// Default: <no value>
	// Required: false
	ClientKey string `yaml:"client_key,omitempty" json:"client_key,omitempty" cty:"client_key"`

	// Dest
	// Absolute path of where to download the file to.
	// If C(dest) is a directory, either the server provided filename or, if none provided, the base name of the URL on the remote server will be used. If a directory, C(force) has no effect.
	// If C(dest) is a directory, the file will always be downloaded (regardless of the C(force) and C(checksum) option), but replaced only if the contents changed.
	//
	// Default: <no value>
	// Required: true
	Dest string `yaml:"dest,omitempty" json:"dest,omitempty" cty:"dest"`

	// Force
	// If C(yes) and C(dest) is not a directory, will download the file every time and replace the file if the contents change. If C(no), the file will only be downloaded if the destination does not exist. Generally should be C(yes) only for small local files.
	// Prior to 0.6, this module behaved as if C(yes) was the default.
	//
	// Default: no
	// Required: false
	Force bool `yaml:"force,omitempty" json:"force,omitempty" cty:"force"`

	// ForceBasicAuth
	// Force the sending of the Basic authentication header upon initial request.
	// httplib2, the library used by the uri module only sends authentication information when a webservice responds to an initial request with a 401 status. Since some basic auth services do not properly send a 401, logins will fail.
	//
	// Default: no
	// Required: false
	ForceBasicAuth bool `yaml:"force_basic_auth,omitempty" json:"force_basic_auth,omitempty" cty:"force_basic_auth"`

	// Headers
	// Add custom HTTP headers to a request in hash/dict format.
	// The hash/dict format was added in Ansible 2.6.
	// Previous versions used a C("key:value,key:value") string format.
	// The C("key:value,key:value") string format is deprecated and has been removed in version 2.10.
	//
	// Default: <no value>
	// Required: false
	Headers map[string]string `yaml:"headers,omitempty" json:"headers,omitempty" cty:"headers"`

	// HttpAgent
	// Header to identify as, generally appears in web server logs.
	//
	// Default: ansible-httpget
	// Required: false
	HttpAgent string `yaml:"http_agent,omitempty" json:"http_agent,omitempty" cty:"http_agent"`

	// Sha256sum
	// If a SHA-256 checksum is passed to this parameter, the digest of the destination file will be calculated after it is downloaded to ensure its integrity and verify that the transfer completed successfully. This option is deprecated and will be removed in version 2.14. Use option C(checksum) instead.
	//
	// Default:
	// Required: false
	Sha256sum string `yaml:"sha256sum,omitempty" json:"sha256sum,omitempty" cty:"sha256sum"`

	// Timeout
	// Timeout in seconds for URL request.
	//
	// Default: 10
	// Required: false
	Timeout int `yaml:"timeout,omitempty" json:"timeout,omitempty" cty:"timeout"`

	// TmpDest
	// Absolute path of where temporary file is downloaded to.
	// When run on Ansible 2.5 or greater, path defaults to ansible's remote_tmp setting
	// When run on Ansible prior to 2.5, it defaults to C(TMPDIR), C(TEMP) or C(TMP) env variables or a platform specific value.
	// U(https://docs.python.org/3/library/tempfile.html#tempfile.tempdir)
	//
	// Default: <no value>
	// Required: false
	TmpDest string `yaml:"tmp_dest,omitempty" json:"tmp_dest,omitempty" cty:"tmp_dest"`

	// UnredirectedHeaders
	// A list of header names that will not be sent on subsequent redirected requests. This list is case insensitive. By default all headers will be redirected. In some cases it may be beneficial to list headers such as C(Authorization) here to avoid potential credential exposure.
	//
	// Default: []
	// Required: false
	UnredirectedHeaders []string `yaml:"unredirected_headers,omitempty" json:"unredirected_headers,omitempty" cty:"unredirected_headers"`

	// Url
	// HTTP, HTTPS, or FTP URL in the form (http|https|ftp)://[user[:pass]]@host.domain[:port]/path
	//
	// Default: <no value>
	// Required: true
	Url string `yaml:"url,omitempty" json:"url,omitempty" cty:"url"`

	// UrlPassword
	// The password for use in HTTP basic authentication.
	// If the C(url_username) parameter is not specified, the C(url_password) parameter will not be used.
	// Since version 2.8 you can also use the 'password' alias for this option.
	//
	// Default: <no value>
	// Required: false
	UrlPassword string `yaml:"url_password,omitempty" json:"url_password,omitempty" cty:"url_password"`

	// UrlUsername
	// The username for use in HTTP basic authentication.
	// This parameter can be used without C(url_password) for sites that allow empty passwords.
	// Since version 2.8 you can also use the C(username) alias for this option.
	//
	// Default: <no value>
	// Required: false
	UrlUsername string `yaml:"url_username,omitempty" json:"url_username,omitempty" cty:"url_username"`

	// UseGssapi
	// Use GSSAPI to perform the authentication, typically this is for Kerberos or Kerberos through Negotiate authentication.
	// Requires the Python library L(gssapi,https://github.com/pythongssapi/python-gssapi) to be installed.
	// Credentials for GSSAPI can be specified with I(url_username)/I(url_password) or with the GSSAPI env var C(KRB5CCNAME) that specified a custom Kerberos credential cache.
	// NTLM authentication is I(not) supported even if the GSSAPI mech for NTLM has been installed.
	//
	// Default: no
	// Required: false
	UseGssapi bool `yaml:"use_gssapi,omitempty" json:"use_gssapi,omitempty" cty:"use_gssapi"`

	// UseProxy
	// if C(no), it will not use a proxy, even if one is defined in an environment variable on the target hosts.
	//
	// Default: yes
	// Required: false
	UseProxy bool `yaml:"use_proxy,omitempty" json:"use_proxy,omitempty" cty:"use_proxy"`

	// ValidateCerts
	// If C(no), SSL certificates will not be validated.
	// This should only be used on personally controlled sites using self-signed certificates.
	//
	// Default: yes
	// Required: false
	ValidateCerts bool `yaml:"validate_certs,omitempty" json:"validate_certs,omitempty" cty:"validate_certs"`

	values map[string]types.Value
}

func (p *GetUrlParams) Names() []string {
	names := []string{}
	for name := range p.values {
		names = append(names, name)
	}
	return names
}

func (p *GetUrlParams) Set(name string, value interface{}) error {
	v, ok := p.values[name]
	if !ok {
		return fmt.Errorf("no param with name %q", name)
	}
	return v.Set(value)
}

func (p *GetUrlParams) Get(name string) (interface{}, error) {
	v, ok := p.values[name]
	if !ok {
		return nil, fmt.Errorf("no param with name %q", name)
	}
	return v.Get(), nil
}

type GetUrlResult struct {
	types.CommonReturn
	Raw string

	// BackupFile
	// name of backup file created after download
	BackupFile string `yaml:"backup_file,omitempty" json:"backup_file,omitempty" cty:"backup_file"`

	// ChecksumDest
	// sha1 checksum of the file after copy
	ChecksumDest string `yaml:"checksum_dest,omitempty" json:"checksum_dest,omitempty" cty:"checksum_dest"`

	// ChecksumSrc
	// sha1 checksum of the file
	ChecksumSrc string `yaml:"checksum_src,omitempty" json:"checksum_src,omitempty" cty:"checksum_src"`

	// Dest
	// destination file/path
	Dest string `yaml:"dest,omitempty" json:"dest,omitempty" cty:"dest"`

	// Elapsed
	// The number of seconds that elapsed while performing the download
	Elapsed int `yaml:"elapsed,omitempty" json:"elapsed,omitempty" cty:"elapsed"`

	// Gid
	// group id of the file
	Gid int `yaml:"gid,omitempty" json:"gid,omitempty" cty:"gid"`

	// Group
	// group of the file
	Group string `yaml:"group,omitempty" json:"group,omitempty" cty:"group"`

	// Md5sum
	// md5 checksum of the file after download
	Md5sum string `yaml:"md5sum,omitempty" json:"md5sum,omitempty" cty:"md5sum"`

	// Mode
	// permissions of the target
	Mode string `yaml:"mode,omitempty" json:"mode,omitempty" cty:"mode"`

	// Msg
	// the HTTP message from the request
	Msg string `yaml:"msg,omitempty" json:"msg,omitempty" cty:"msg"`

	// Owner
	// owner of the file
	Owner string `yaml:"owner,omitempty" json:"owner,omitempty" cty:"owner"`

	// Secontext
	// the SELinux security context of the file
	Secontext string `yaml:"secontext,omitempty" json:"secontext,omitempty" cty:"secontext"`

	// Size
	// size of the target
	Size int `yaml:"size,omitempty" json:"size,omitempty" cty:"size"`

	// Src
	// source file used after download
	Src string `yaml:"src,omitempty" json:"src,omitempty" cty:"src"`

	// State
	// state of the target
	State string `yaml:"state,omitempty" json:"state,omitempty" cty:"state"`

	// StatusCode
	// the HTTP status code from the request
	StatusCode int `yaml:"status_code,omitempty" json:"status_code,omitempty" cty:"status_code"`

	// Uid
	// owner id of the file, after execution
	Uid int `yaml:"uid,omitempty" json:"uid,omitempty" cty:"uid"`

	// Url
	// the actual URL used for the request
	Url string `yaml:"url,omitempty" json:"url,omitempty" cty:"url"`

	values map[string]types.Value
}

func (r *GetUrlResult) Names() []string {
	names := []string{}
	for name := range r.values {
		names = append(names, name)
	}
	return names
}

func (r *GetUrlResult) Set(name string, value interface{}) error {
	v, ok := r.values[name]
	if !ok {
		return fmt.Errorf("no param with name %q", name)
	}
	return v.Set(value)
}

func (r *GetUrlResult) Get(name string) (interface{}, error) {
	v, ok := r.values[name]
	if !ok {
		return nil, fmt.Errorf("no param with name %q", name)
	}
	return v.Get(), nil
}

func (m *GetUrl) GetResult() types.Result {
	return &m.Result
}

func (m *GetUrl) GetResultRaw() string {
	return m.Result.Raw
}

func (m *GetUrl) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *GetUrl) GetParams() types.Params {
	return &m.Params
}

func (m *GetUrl) GetType() string {
	return "get_url"
}
