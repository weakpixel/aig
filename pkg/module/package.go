// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("package", func() Module {
		return NewPackage()
	})
}

type Package struct {
	ModuleName string
	Params     PackageParams
	Result     PackageResult
}

type PackageParams struct {

	// Name
	Name string `yaml:"name,omitempty" json:"name,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// Use
	Use string `yaml:"use,omitempty" json:"use,omitempty"`
}

type PackageResult struct {
	types.CommonReturn
	Raw string
}

func (m *Package) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *Package) GetResult() interface{} {
	return &m.Result
}

func (m *Package) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Package) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *Package) GetParams() interface{} {
	return &m.Params
}

func (m *Package) GetType() string {
	return m.ModuleName
}

func NewPackage() *Package {
	return &Package{
		ModuleName: "package",
	}
}
