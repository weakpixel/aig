// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("iptables", func() Module {
		return NewIptables()
	})
}

type Iptables struct {
	ModuleName string
	Params     IptablesParams
	Result     IptablesResult
}

type IptablesParams struct {

	// Action
	Action string `yaml:"action,omitempty" json:"action,omitempty"`

	// Chain
	Chain string `yaml:"chain,omitempty" json:"chain,omitempty"`

	// ChainManagement
	ChainManagement bool `yaml:"chain_management,omitempty" json:"chain_management,omitempty"`

	// Comment
	Comment string `yaml:"comment,omitempty" json:"comment,omitempty"`

	// Ctstate
	Ctstate []string `yaml:"ctstate,omitempty" json:"ctstate,omitempty"`

	// Destination
	Destination string `yaml:"destination,omitempty" json:"destination,omitempty"`

	// DestinationPort
	DestinationPort string `yaml:"destination_port,omitempty" json:"destination_port,omitempty"`

	// DestinationPorts
	DestinationPorts []string `yaml:"destination_ports,omitempty" json:"destination_ports,omitempty"`

	// DstRange
	DstRange string `yaml:"dst_range,omitempty" json:"dst_range,omitempty"`

	// Flush
	Flush bool `yaml:"flush,omitempty" json:"flush,omitempty"`

	// Fragment
	Fragment string `yaml:"fragment,omitempty" json:"fragment,omitempty"`

	// Gateway
	Gateway string `yaml:"gateway,omitempty" json:"gateway,omitempty"`

	// GidOwner
	GidOwner string `yaml:"gid_owner,omitempty" json:"gid_owner,omitempty"`

	// Goto
	Goto string `yaml:"goto,omitempty" json:"goto,omitempty"`

	// IcmpType
	IcmpType string `yaml:"icmp_type,omitempty" json:"icmp_type,omitempty"`

	// InInterface
	InInterface string `yaml:"in_interface,omitempty" json:"in_interface,omitempty"`

	// IpVersion
	IpVersion string `yaml:"ip_version,omitempty" json:"ip_version,omitempty"`

	// Jump
	Jump string `yaml:"jump,omitempty" json:"jump,omitempty"`

	// Limit
	Limit string `yaml:"limit,omitempty" json:"limit,omitempty"`

	// LimitBurst
	LimitBurst string `yaml:"limit_burst,omitempty" json:"limit_burst,omitempty"`

	// LogLevel
	LogLevel string `yaml:"log_level,omitempty" json:"log_level,omitempty"`

	// LogPrefix
	LogPrefix string `yaml:"log_prefix,omitempty" json:"log_prefix,omitempty"`

	// Match
	Match []string `yaml:"match,omitempty" json:"match,omitempty"`

	// MatchSet
	MatchSet string `yaml:"match_set,omitempty" json:"match_set,omitempty"`

	// MatchSetFlags
	MatchSetFlags string `yaml:"match_set_flags,omitempty" json:"match_set_flags,omitempty"`

	// OutInterface
	OutInterface string `yaml:"out_interface,omitempty" json:"out_interface,omitempty"`

	// Policy
	Policy string `yaml:"policy,omitempty" json:"policy,omitempty"`

	// Protocol
	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`

	// RejectWith
	RejectWith string `yaml:"reject_with,omitempty" json:"reject_with,omitempty"`

	// RuleNum
	RuleNum string `yaml:"rule_num,omitempty" json:"rule_num,omitempty"`

	// SetCounters
	SetCounters string `yaml:"set_counters,omitempty" json:"set_counters,omitempty"`

	// SetDscpMark
	SetDscpMark string `yaml:"set_dscp_mark,omitempty" json:"set_dscp_mark,omitempty"`

	// SetDscpMarkClass
	SetDscpMarkClass string `yaml:"set_dscp_mark_class,omitempty" json:"set_dscp_mark_class,omitempty"`

	// Source
	Source string `yaml:"source,omitempty" json:"source,omitempty"`

	// SourcePort
	SourcePort string `yaml:"source_port,omitempty" json:"source_port,omitempty"`

	// SrcRange
	SrcRange string `yaml:"src_range,omitempty" json:"src_range,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// Syn
	Syn string `yaml:"syn,omitempty" json:"syn,omitempty"`

	// Table
	Table string `yaml:"table,omitempty" json:"table,omitempty"`

	// TcpFlags
	TcpFlags map[string]interface{} `yaml:"tcp_flags,omitempty" json:"tcp_flags,omitempty"`

	// ToDestination
	ToDestination string `yaml:"to_destination,omitempty" json:"to_destination,omitempty"`

	// ToPorts
	ToPorts string `yaml:"to_ports,omitempty" json:"to_ports,omitempty"`

	// ToSource
	ToSource string `yaml:"to_source,omitempty" json:"to_source,omitempty"`

	// UidOwner
	UidOwner string `yaml:"uid_owner,omitempty" json:"uid_owner,omitempty"`

	// Wait
	Wait string `yaml:"wait,omitempty" json:"wait,omitempty"`
}

type IptablesResult struct {
	types.CommonReturn
	Raw string
}

func (m *Iptables) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *Iptables) GetResult() interface{} {
	return &m.Result
}

func (m *Iptables) GetResultRaw() string {
	return m.Result.Raw
}

func (m *Iptables) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *Iptables) GetParams() interface{} {
	return &m.Params
}

func (m *Iptables) GetType() string {
	return m.ModuleName
}

func NewIptables() *Iptables {
	return &Iptables{
		ModuleName: "iptables",
	}
}
