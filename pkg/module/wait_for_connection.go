
// Autogenerated
package module

import (
	"aig/pkg/ansible"
	
)

type WaitForConnection struct {
	ModuleName string
	Options WaitForConnectionOptions
	Result WaitForConnectionResult
}

type WaitForConnectionOptions struct {
	
		// ConnectTimeout 
		ConnectTimeout int `yaml:"connect_timeout,omitempty" json:"connect_timeout,omitempty"`
	
		// Delay 
		Delay int `yaml:"delay,omitempty" json:"delay,omitempty"`
	
		// Sleep 
		Sleep int `yaml:"sleep,omitempty" json:"sleep,omitempty"`
	
		// Timeout 
		Timeout int `yaml:"timeout,omitempty" json:"timeout,omitempty"`
	
}

type WaitForConnectionResult struct {
	Raw string 
	
		// Elapsed 
		Elapsed float64 `yaml:"elapsed,omitempty" json:"elapsed,omitempty"`
	
}

func (m *WaitForConnection) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Options, &m.Result)
	m.Result.Raw = raw
	return err
}

func NewWaitForConnection() *WaitForConnection {
	return &WaitForConnection {
		ModuleName: "wait_for_connection",
	}
}
	