// Autogenerated
package module

import (
	"github.com/weakpixel/aig/pkg/ansible"
	"github.com/weakpixel/aig/pkg/types"
)

func init() {
	addModuleFactory("rpm_key", func() Module {
		return NewRpmKey()
	})
}

type RpmKey struct {
	ModuleName string
	Params     RpmKeyParams
	Result     RpmKeyResult
}

type RpmKeyParams struct {

	// Fingerprint
	Fingerprint string `yaml:"fingerprint,omitempty" json:"fingerprint,omitempty"`

	// Key
	Key string `yaml:"key,omitempty" json:"key,omitempty"`

	// State
	State string `yaml:"state,omitempty" json:"state,omitempty"`

	// ValidateCerts
	ValidateCerts bool `yaml:"validate_certs,omitempty" json:"validate_certs,omitempty"`
}

type RpmKeyResult struct {
	types.CommonReturn
	Raw string
}

func (m *RpmKey) Run() error {
	raw, err := ansible.Execute(m.ModuleName, m.Params, &m.Result)
	m.Result.Raw = raw
	return err
}

func (m *RpmKey) GetResult() interface{} {
	return &m.Result
}

func (m *RpmKey) GetResultRaw() string {
	return m.Result.Raw
}

func (m *RpmKey) GetCommonResult() types.CommonReturn {
	return m.Result.CommonReturn
}

func (m *RpmKey) GetParams() interface{} {
	return &m.Params
}

func (m *RpmKey) GetType() string {
	return m.ModuleName
}

func NewRpmKey() *RpmKey {
	return &RpmKey{
		ModuleName: "rpm_key",
	}
}
